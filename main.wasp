app KingsandQueens {
  wasp: {
    version: "^0.11.1"
  },
  title: "KingsandQueens",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id        Int     @id @default(autoincrement())
    username  String  @unique
    password  String
    country   String
    role      String
    energy    Int     @default(150)
    money     Int     @default(0)
    resources Int     @default(0)
    weapon    Boolean @default(false)
    bed       Boolean @default(false)
psl=}

entity Company {=psl
    id        Int    @id @default(autoincrement())
    name      String
    salary    Int
    itemPrice Int
    itemType  String
psl=}

entity Item {=psl
    id          Int    @id @default(autoincrement())
    name        String
    type        String
    energyBoost Int
    price       Int
psl=}

action farmResources {
  fn: import { farmResources } from "@server/actions.js",
  entities: [User]
}

action workForCompany {
  fn: import { workForCompany } from "@server/actions.js",
  entities: [User, Company]
}

action buyItem {
  fn: import { buyItem } from "@server/actions.js",
  entities: [User, Company, Item]
}

action sellResources {
  fn: import { sellResources } from "@server/actions.js",
  entities: [User]
}

action fightBattle {
  fn: import { fightBattle } from "@server/actions.js",
  entities: [User]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User]
}

query getCompanies {
  fn: import { getCompanies } from "@server/queries.js",
  entities: [Company]
}

query getItems {
  fn: import { getItems } from "@server/queries.js",
  entities: [Item]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { DashboardPage } from "@client/pages/DashboardPage.jsx",
  authRequired: true
}